name: 🔐📤🚨🌳 Send secrets detected everytime that we push to any branch 

on:
  push:
    
env:  
  DEFECTDOJO_URL: ${{ secrets.DEFECTDOJO_URL }}/api/v2  
  TEST_TYPE_ID_FOR_SECRET_SCANNING: 208
  TEST_ID: 73

jobs:
  send-secrets:
    runs-on: ubuntu-latest
    steps:
      
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Get secrets
        run: |
          curl  \
          --url https://api.github.com/repos/0gis0/import-ghas-to-defectdojo/secret-scanning/alerts \
          --header "Authorization: Bearer ${{ steps.generate-token.outputs.token }}" \
          --header 'content-type: application/json' > secrets.json


      - name: Convert secrets to a valid json
        run: |
          JSON=$(cat secrets.json | jq -c --arg TEST_ID "$TEST_ID" 'map({title: (.secret_type_display_name + " " + .secret[0:15]), description: (.secret + "\nValidity: " + .validity + "\nPublicly leaked: " + (.publicly_leaked | tostring)), severity: "Critical", found_by: [208], test: ($TEST_ID | tonumber), active: .publicly_leaked, verified: false, numerical_severity: 3})')
          echo $JSON > secrets-to-defectdojo.json

      - name: Upload secrets as an artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: secrets
          path: secrets-to-defectdojo.json

      - name: Send them to DefectDojo
        run: |

          # Iterate for each secret

          for secret in $(jq -r '. | keys | .[]' secrets-to-defectdojo.json); do

            echo "Sending secret # $secret"
            echo "$(jq -c ".[$secret]" secrets-to-defectdojo.json)"
            DATA=$(jq -c ".[$secret]" secrets-to-defectdojo.json)

            curl --request POST --url ${{ env.DEFECTDOJO_URL }}/findings/ \
            --header "authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            --header 'content-type: application/json' \
            --data "$DATA"

          done